name: Main Branch Pipeline
on:
  workflow_call:
    inputs:
      componentName:
        required: true
        type: string
run-name: ${{ github.sha }} | ${{ github.event.head_commit.message }}
jobs:
  UNIT-TESTS:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo npm test

  build:
    runs-on: self-hosted
    needs: UNIT-TESTS
    steps:
      - uses: actions/checkout@v4
      - run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 160885263759.dkr.ecr.us-east-1.amazonaws.com
          docker build -t 160885263759.dkr.ecr.us-east-1.amazonaws.com/roboshop-${{ inputs.componentName }}:${{ github.sha }} .
          docker push 160885263759.dkr.ecr.us-east-1.amazonaws.com/roboshop-${{ inputs.componentName }}:${{ github.sha }}
  DEV:
    runs-on: self-hosted
    environment: DEV
    needs: build
    steps:
      - uses: actions/checkout@v4
        name: Checkout Code
      - run: |
          aws eks update-kubeconfig --name dev-eks
          LB=$(kubectl get svc -n argocd argocd-server --output json | jq '.status.loadBalancer.ingress[0].hostname'| sed -e 's/"//g')
          PASS=$(kubectl get secrets argocd-initial-admin-secret -n argocd --template={{.data.password}} | base64 -d)
          argocd login $LB --username admin --password $PASS --insecure
        name: ArgoCD login
      - run: |
          argocd app create ${{ inputs.componentName }} --repo https://github.com/siddevsecops007/roboshop-helm.git --path . --dest-namespace default --dest-server https://kubernetes.default.svc --values env-dev/${{ inputs.componentName }}.yaml --helm-set COMMIT_ID=${{ github.sha }} --upsert  
          argocd app sync ${{ inputs.componentName }}

  QA:
    runs-on: self-hosted
    environment: QA
    needs: DEV
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo

  E2E-TESTS:
    runs-on: self-hosted
    environment: E2E-TESTS
    needs: QA
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo
  UAT:
    runs-on: self-hosted
    environment: UAT
    needs: E2E-TESTS
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo
  PROD:
    runs-on: self-hosted
    environment: PROD
    needs: UAT
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo 
          
          

##
          
        
